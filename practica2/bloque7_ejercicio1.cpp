/*
 * üìù VERIFICADOR DE LONGITUD DE CADENAS üìè
 * =====================================
 * 
 * Bloque 7: Ejercicio 1
 * --------------------
 * Programa que pide al usuario una cadena de caracteres, verifica la longitud de la cadena,
 * y si √©sta supera a 10 caracteres la muestra en pantalla, caso contrario no la muestra.
 *
 * Autor: Yoquelvis Abreu
 * Fecha: Marzo 2024
 */

#include <iostream>
#include <string.h> // Para strlen()
#include <iomanip>  // Para setw()
using namespace std;

// Constantes para colores (ANSI escape codes)
const string COLOR_RESET = "\033[0m";
const string COLOR_TITLE = "\033[1;36m";  // Cyan brillante
const string COLOR_HIGHLIGHT = "\033[1;33m";  // Amarillo brillante
const string COLOR_INPUT = "\033[1;32m";  // Verde brillante
const string COLOR_SUCCESS = "\033[1;92m";  // Verde claro brillante
const string COLOR_ERROR = "\033[1;91m";  // Rojo claro brillante
const string COLOR_INFO = "\033[1;94m";  // Azul claro brillante

// Funci√≥n para limpiar la pantalla
void limpiarPantalla() {
    #ifdef _WIN32
        system("cls");
    #else
        system("clear");
    #endif
}

// Funci√≥n para mostrar el banner del programa
void mostrarBanner() {
    cout << COLOR_TITLE << "\n";
    cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n";
    cout << "‚ïë     VERIFICADOR DE LONGITUD DE CADENAS    ‚ïë\n";
    cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n" << COLOR_RESET;
}

// Funci√≥n para mostrar una cadena con formato visual
void mostrarCadena(const char* cadena, int longitud) {
    cout << COLOR_HIGHLIGHT << "\nüìä AN√ÅLISIS DE LA CADENA:\n";
    cout << "========================\n" << COLOR_RESET;
    
    cout << COLOR_INFO << "‚îå";
    for(int i = 0; i < longitud + 2; i++) cout << "‚îÄ";
    cout << "‚îê\n";
    
    cout << "‚îÇ " << cadena << " ‚îÇ\n";
    
    cout << "‚îî";
    for(int i = 0; i < longitud + 2; i++) cout << "‚îÄ";
    cout << "‚îò" << COLOR_RESET << "\n\n";
    
    cout << "üìè Longitud: " << COLOR_HIGHLIGHT << longitud << " caracteres" << COLOR_RESET << "\n";
}

int main() {
    // Limpiar pantalla y mostrar banner
    limpiarPantalla();
    mostrarBanner();
    
    // Declaracion de variables
    char cadena[100]; // Arreglo para almacenar la cadena
    int longitud; // Para almacenar la longitud de la cadena
    
    // Explicaci√≥n del programa
    cout << "üìã DESCRIPCI√ìN: Este programa verifica si una cadena tiene m√°s de 10 caracteres\n";
    cout << "               y la muestra solo si cumple esta condici√≥n.\n\n";
    
    // Pedir la cadena al usuario con formato mejorado
    cout << COLOR_HIGHLIGHT << "üî§ Digite una cadena de caracteres: " << COLOR_INPUT;
    cin.getline(cadena, 100, '\n');
    cout << COLOR_RESET;
    
    // Calcular la longitud de la cadena
    longitud = strlen(cadena);
    
    // Verificar si la longitud supera 10 caracteres
    if(longitud > 10) {
        cout << "\n" << COLOR_SUCCESS << "‚úÖ La cadena tiene m√°s de 10 caracteres." << COLOR_RESET;
        mostrarCadena(cadena, longitud);
    } else {
        cout << "\n" << COLOR_ERROR << "‚ö†Ô∏è La cadena tiene " << longitud << " caracteres, no se mostrar√° el contenido." << COLOR_RESET << "\n";
        cout << COLOR_INFO << "   La cadena debe tener m√°s de 10 caracteres para ser mostrada." << COLOR_RESET << "\n";
    }
    
    // A√±adir instrucciones finales
    cout << "\nPresione Enter para finalizar...";
    cin.get();
    
    return 0;
} 