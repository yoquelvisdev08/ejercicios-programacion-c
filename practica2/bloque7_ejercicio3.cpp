/*
 * üìù COMPARADOR DE CADENAS üìù
 * ========================
 *
 * Bloque 7: Ejercicio 3
 * --------------------
 * Programa que pide al usuario que digite 2 cadenas de caracteres,
 * e indica si ambas cadenas son iguales. En caso de no serlo,
 * indica cu√°l es mayor alfab√©ticamente.
 *
 * Autor: Yoquelvis Abreu
 * Fecha: Marzo 2024
 */

#include <iostream>
#include <string.h> // Para strcmp()
#include <iomanip>
using namespace std;

// Constantes para colores (ANSI escape codes)
const string COLOR_RESET = "\033[0m";
const string COLOR_TITLE = "\033[1;36m";  // Cyan brillante
const string COLOR_HIGHLIGHT = "\033[1;33m";  // Amarillo brillante
const string COLOR_INPUT = "\033[1;32m";  // Verde brillante
const string COLOR_STRING1 = "\033[1;34m";  // Azul brillante
const string COLOR_STRING2 = "\033[1;35m";  // Magenta brillante
const string COLOR_TABLE = "\033[1;37;44m";  // Blanco brillante sobre azul
const string COLOR_RESULT = "\033[1;31m";  // Rojo brillante

// Funci√≥n para limpiar la pantalla
void limpiarPantalla() {
    #ifdef _WIN32
        system("cls");
    #else
        system("clear");
    #endif
}

// Funci√≥n para mostrar el banner del programa
void mostrarBanner() {
    cout << COLOR_TITLE << "\n";
    cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n";
    cout << "‚ïë       COMPARADOR DE CADENAS       ‚ïë\n";
    cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n" << COLOR_RESET;
}

// Funci√≥n para mostrar una cadena con formato visual
void mostrarCadena(const char* cadena, const char* titulo, string color) {
    int longitud = strlen(cadena);
    
    cout << COLOR_HIGHLIGHT << "\n" << titulo << COLOR_RESET << endl;
    
    // Mostrar cadena con formato de caja
    cout << color << "‚îå";
    for(int i = 0; i < longitud + 2; i++) cout << "‚îÄ";
    cout << "‚îê\n";
    
    cout << "‚îÇ " << cadena << " ‚îÇ\n";
    
    cout << "‚îî";
    for(int i = 0; i < longitud + 2; i++) cout << "‚îÄ";
    cout << "‚îò" << COLOR_RESET << "\n";
    
    // Informaci√≥n adicional
    cout << "   Longitud: " << longitud << " caracteres\n";
}

int main() {
    // Limpiar pantalla y mostrar banner
    limpiarPantalla();
    mostrarBanner();
    
    // Declaracion de variables
    char cadena1[100];
    char cadena2[100];
    
    // Explicaci√≥n del programa
    cout << "üìã DESCRIPCI√ìN: Este programa compara dos cadenas de texto e indica\n";
    cout << "               si son iguales o cu√°l es mayor alfab√©ticamente.\n\n";
    
    // Solicitar las cadenas
    cout << COLOR_HIGHLIGHT << "üî§ INGRESO DE CADENAS DE TEXTO:\n";
    cout << "=============================\n" << COLOR_RESET;
    
    cout << COLOR_HIGHLIGHT << "üìù Ingrese la primera cadena: " << COLOR_INPUT;
    cin.getline(cadena1, 100, '\n');
    cout << COLOR_RESET;
    
    cout << "\n"; // Salto de l√≠nea entre inputs
    
    cout << COLOR_HIGHLIGHT << "üìù Ingrese la segunda cadena: " << COLOR_INPUT;
    cin.getline(cadena2, 100, '\n');
    cout << COLOR_RESET;
    
    // Mostrar las cadenas ingresadas
    mostrarCadena(cadena1, "üìä PRIMERA CADENA:", COLOR_STRING1);
    mostrarCadena(cadena2, "üìä SEGUNDA CADENA:", COLOR_STRING2);
    
    // Comparar las cadenas
    cout << "\n" << COLOR_HIGHLIGHT << "üîç COMPARANDO CADENAS...\n";
    cout << "=====================\n" << COLOR_RESET;
    
    // Resultado de la comparaci√≥n
    int resultado = strcmp(cadena1, cadena2);
    
    // Tabla de comparaci√≥n con mejor formato
    cout << COLOR_TABLE << "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n";
    cout << "‚îÇ CRITERIO                ‚îÇ RESULTADO               ‚îÇ\n";
    cout << "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§" << COLOR_RESET << "\n";
    
    // Fila 1: ¬øSon iguales?
    cout << "‚îÇ ¬øLas cadenas son        ‚îÇ ";
    if(resultado == 0) {
        cout << COLOR_RESULT << "‚úÖ S√ç son iguales" << COLOR_RESET << "        ‚îÇ\n";
    } else {
        cout << COLOR_RESULT << "‚ùå NO son iguales" << COLOR_RESET << "        ‚îÇ\n";
    }
    
    // Fila 2: Orden alfab√©tico
    cout << "‚îÇ Orden alfab√©tico        ‚îÇ ";
    if(resultado != 0) {
        if(resultado > 0) {
            cout << COLOR_RESULT << "\"" << cadena2 << "\" precede a \"" << cadena1 << "\"" << COLOR_RESET;
            // Rellenar espacios
            for(int i = 0; i < 20 - (strlen(cadena1) + strlen(cadena2) + 15); i++) cout << " ";
            cout << "‚îÇ\n";
        } else {
            cout << COLOR_RESULT << "\"" << cadena1 << "\" precede a \"" << cadena2 << "\"" << COLOR_RESET;
            // Rellenar espacios
            for(int i = 0; i < 20 - (strlen(cadena1) + strlen(cadena2) + 15); i++) cout << " ";
            cout << "‚îÇ\n";
        }
    } else {
        cout << COLOR_RESULT << "No aplica" << COLOR_RESET << "                ‚îÇ\n";
    }
    
    cout << "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n";
    
    // Explicaci√≥n del proceso
    cout << "\n" << COLOR_HIGHLIGHT << "üìù EXPLICACI√ìN DEL PROCESO:" << COLOR_RESET << endl;
    cout << "1. Se leyeron dos cadenas del usuario.\n";
    cout << "2. Se utiliz√≥ strcmp() para comparar las cadenas car√°cter por car√°cter.\n";
    cout << "3. strcmp() devuelve:\n";
    cout << "   - 0 si las cadenas son id√©nticas\n";
    cout << "   - <0 si la primera cadena es menor (precede alfab√©ticamente)\n";
    cout << "   - >0 si la primera cadena es mayor\n\n";
    
    // Conclusi√≥n m√°s clara
    cout << COLOR_HIGHLIGHT << "üìå CONCLUSI√ìN: " << COLOR_RESET;
    if(resultado == 0) {
        cout << COLOR_RESULT << "Ambas cadenas son exactamente iguales." << COLOR_RESET << "\n\n";
    } else if(resultado > 0) {
        cout << COLOR_RESULT << "La cadena \"" << cadena2 << "\" es alfab√©ticamente mayor que \"" << cadena1 << "\"." << COLOR_RESET << "\n\n";
    } else {
        cout << COLOR_RESULT << "La cadena \"" << cadena1 << "\" es alfab√©ticamente mayor que \"" << cadena2 << "\"." << COLOR_RESET << "\n\n";
    }
    
    // A√±adir instrucciones finales
    cout << "Presione Enter para finalizar...";
    cin.ignore();
    cin.get();
    
    return 0;
} 